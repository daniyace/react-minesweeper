{"version":3,"sources":["components/Grid.jsx","components/Layout.jsx","index.js"],"names":["Grid","size","ban","matrix","i","j","val","Math","floor","random","x","y","marca","mines","h","useState","state","setState","surround","cell","copy","handleRigthClick","console","log","alert","window","location","reload","length","setTimeout","endGame","className","map","row","col","onClick","onContextMenu","e","preventDefault","handleLeftClick","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4de72f93.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/grid.css';\r\n\r\nconst Grid = () => {\r\n  let size = 15;\r\n  let ban = true;\r\n  let matrix = [];\r\n  for (var i = 0; i < size; i++) {\r\n    matrix[i] = [];\r\n    for (var j = 0; j < size; j++) {\r\n      matrix[i][j] = {\r\n        val: Math.floor(Math.random() * 2),\r\n        x: i,\r\n        y: j,\r\n        marca: false,\r\n        mines: 0,\r\n      };\r\n      for (let h = 0; h < 2; h++)\r\n        if (matrix[i][j].val === 1)\r\n          matrix[i][j].val = Math.floor(Math.random() * 2);\r\n    }\r\n  }\r\n\r\n  const [state, setState] = useState(matrix);\r\n\r\n  const surround = (cell, copy) => {\r\n    let x = cell.x;\r\n    let y = cell.y;\r\n    let mines = 0;\r\n    for (let i = -1; i < 2; i++)\r\n      for (let j = -1; j < 2; j++)\r\n        if (i === 0 && j === 0) {\r\n          //no comprobar la casilla a la que se le da click\r\n        } else if (x + i === -1 || x + i === size) {\r\n          //manejando los limites en x\r\n        } else if (y + j === -1 || y + j === size) {\r\n          //manejando los limites en y\r\n        } else if (copy[x + i][y + j].val === 1) mines++;\r\n\r\n    copy[cell.x][cell.y] = {\r\n      val: 2,\r\n      x: cell.x,\r\n      y: cell.y,\r\n      marca: cell.marca,\r\n      mines: mines,\r\n    };\r\n\r\n    if (mines === 0) {\r\n      for (let i = -1; i < 2; i++)\r\n        for (let j = -1; j < 2; j++)\r\n          if (i === 0 && j === 0) {\r\n            //no comprobar la casilla a la que se le da click\r\n          } else if (x + i === -1 || x + i === size) {\r\n            //manejando los limites en x\r\n          } else if (y + j === -1 || y + j === size) {\r\n            //manejando los limites en y\r\n          } else if (copy[x + i][y + j].val === 1) mines++;\r\n          else if (copy[x + i][y + j].val !== 2) {\r\n            surround(copy[x + i][y + j], copy);\r\n          }\r\n    }\r\n    return copy;\r\n  };\r\n\r\n  const endGame = () => {\r\n    for (var i = 0; i < state.length; i++) {\r\n      for (var j = 0; j < state[0].length; j++) {\r\n        if (state[i][j].val === 0) ban = false;\r\n      }\r\n    }\r\n    if (ban) {\r\n      alert('Ya ganaste we');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleRigthClick = (cell) => {\r\n    if (!cell.marca) {\r\n      if (cell.val === 1) {\r\n        alert('Ya perdiste chavo');\r\n        window.location.reload();\r\n      } else {\r\n        if (cell.val !== 2) {\r\n          setState(surround(cell, [...state]));\r\n          endGame();\r\n        }\r\n      }\r\n    } else {\r\n      console.log(cell.val);\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = (e, cell) => {\r\n    e.preventDefault();\r\n    let copy = [...state];\r\n    copy[cell.x][cell.y] = {\r\n      val: cell.val,\r\n      x: cell.x,\r\n      y: cell.y,\r\n      marca: !cell.marca,\r\n      mines: cell.mines,\r\n    };\r\n    setState(copy);\r\n  };\r\n\r\n  return (\r\n    <div className='grid'>\r\n      {state.map((row, i) => (\r\n        <div key={i}>\r\n          {row.map((col, j) => (\r\n            <div\r\n              key={j}\r\n              className={\r\n                col.marca && col.val === 1\r\n                  ? 'd-inline-flex cell flag'\r\n                  : col.marca && col.val === 0\r\n                  ? 'd-inline-flex cell flag'\r\n                  : col.val === 1\r\n                  ? !ban\r\n                    ? 'd-inline-flex cell active'\r\n                    : 'd-inline-flex cell '\r\n                  : col.val === 2\r\n                  ? 'd-inline-flex cell clean'\r\n                  : 'd-inline-flex cell '\r\n              }\r\n              onClick={() => handleRigthClick(col)}\r\n              onContextMenu={(e) => handleLeftClick(e, col)}\r\n            >\r\n              <p>{col.mines !== 0 ? col.mines : 'â €'}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport Grid from './Grid';\r\nimport '../styles/layout.css';\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <div className='main'>\r\n      <Grid />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}