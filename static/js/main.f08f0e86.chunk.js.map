{"version":3,"sources":["components/Grid.jsx","components/Layout.jsx","index.js"],"names":["Grid","size","ban","useState","diff","setDiff","state","setState","select","setSelect","first","setFirst","lost","setLost","win","setWin","useEffect","matrix","i","j","val","Math","floor","random","x","y","marca","mines","start","length","surround","cell","copy","handleRigthClick","console","log","alert","endGame","reset","className","map","row","col","onClick","onContextMenu","e","preventDefault","handleLeftClick","name","id","defaultValue","value","document","getElementById","Layout","window","addEventListener","platforms","userChoice","then","choiceResult","outcome","handleError","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f08f0e86.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/grid.css';\r\nimport '../styles/selection.css';\r\n\r\nconst Grid = () => {\r\n  const size = 15;\r\n  let ban = true;\r\n  const start = () => {\r\n    let matrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n      matrix[i] = [];\r\n      for (let j = 0; j < size; j++) {\r\n        matrix[i][j] = {\r\n          val: Math.floor(Math.random() * 2),\r\n          x: i,\r\n          y: j,\r\n          marca: false,\r\n          mines: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    setState(matrix);\r\n  };\r\n\r\n  const [diff, setDiff] = useState(false);\r\n  const [state, setState] = useState(false);\r\n  const [select, setSelect] = useState(false);\r\n  const [first, setFirst] = useState(true);\r\n  const [lost, setLost] = useState(false);\r\n  const [win, setWin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (first && select) {\r\n      setFirst(false);\r\n      start();\r\n    }\r\n    if (diff > 0 && state) {\r\n      setDiff(diff - 1);\r\n\r\n      let matrix = state;\r\n      for (let i = 0; i < state.length; i++)\r\n        for (let j = 0; j < state.length; j++)\r\n          if (matrix[i][j].val === 1)\r\n            matrix[i][j].val = Math.floor(Math.random() * 2);\r\n\r\n      if (matrix) setState(state);\r\n    }\r\n  }, [select, diff, first, state]);\r\n\r\n  const surround = (cell, copy) => {\r\n    let x = cell.x;\r\n    let y = cell.y;\r\n    let mines = 0;\r\n    for (let i = -1; i < 2; i++)\r\n      for (let j = -1; j < 2; j++)\r\n        if (i === 0 && j === 0) {\r\n          //no comprobar la casilla a la que se le da click\r\n        } else if (x + i === -1 || x + i === size) {\r\n          //manejando los limites en x\r\n        } else if (y + j === -1 || y + j === size) {\r\n          //manejando los limites en y\r\n        } else if (copy[x + i][y + j].val === 1) mines++;\r\n\r\n    copy[cell.x][cell.y] = {\r\n      val: 2,\r\n      x: cell.x,\r\n      y: cell.y,\r\n      marca: cell.marca,\r\n      mines: mines,\r\n    };\r\n\r\n    if (mines === 0) {\r\n      for (let i = -1; i < 2; i++)\r\n        for (let j = -1; j < 2; j++)\r\n          if (i === 0 && j === 0) {\r\n            //no comprobar la casilla a la que se le da click\r\n          } else if (x + i === -1 || x + i === size) {\r\n            //manejando los limites en x\r\n          } else if (y + j === -1 || y + j === size) {\r\n            //manejando los limites en y\r\n          } else if (copy[x + i][y + j].val === 1) mines++;\r\n          else if (copy[x + i][y + j].val !== 2) {\r\n            surround(copy[x + i][y + j], copy);\r\n          }\r\n    }\r\n    return copy;\r\n  };\r\n\r\n  const endGame = () => {\r\n    for (var i = 0; i < state.length; i++) {\r\n      for (var j = 0; j < state[0].length; j++) {\r\n        if (state[i][j].val === 0) ban = false;\r\n      }\r\n    }\r\n    if (ban) {\r\n      alert('You win');\r\n      setWin(true);\r\n    }\r\n  };\r\n\r\n  const handleRigthClick = (cell) => {\r\n    if (!cell.marca) {\r\n      if (!lost && !win)\r\n        if (cell.val === 1) {\r\n          alert('You lost');\r\n          setLost(true);\r\n        } else {\r\n          if (cell.val !== 2) {\r\n            setState(surround(cell, [...state]));\r\n            endGame();\r\n          }\r\n        }\r\n    } else {\r\n      console.log(cell.val);\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = (e, cell) => {\r\n    e.preventDefault();\r\n    let copy = [...state];\r\n    copy[cell.x][cell.y] = {\r\n      val: cell.val,\r\n      x: cell.x,\r\n      y: cell.y,\r\n      marca: !cell.marca,\r\n      mines: cell.mines,\r\n    };\r\n    setState(copy);\r\n  };\r\n  const reset = () => {\r\n    setDiff(false);\r\n    setState(false);\r\n    setSelect(false);\r\n    setFirst(true);\r\n    setLost(false);\r\n    setWin(false);\r\n    ban = false;\r\n  };\r\n  if (select && state) {\r\n    return (\r\n      <div className='grid'>\r\n        {state.map((row, i) => (\r\n          <div key={i}>\r\n            {row.map((col, j) => (\r\n              <div\r\n                key={j}\r\n                className={\r\n                  col.marca && col.val === 1\r\n                    ? 'd-inline-flex cell flag'\r\n                    : col.marca && col.val === 0\r\n                    ? 'd-inline-flex cell flag'\r\n                    : col.val === 1\r\n                    ? !ban || lost\r\n                      ? 'd-inline-flex cell active'\r\n                      : 'd-inline-flex cell'\r\n                    : col.val === 2\r\n                    ? 'd-inline-flex cell clean'\r\n                    : 'd-inline-flex cell '\r\n                }\r\n                onClick={() => handleRigthClick(col)}\r\n                onContextMenu={(e) => handleLeftClick(e, col)}\r\n              >\r\n                <p>{col.mines !== 0 ? col.mines : 'â €'}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        {lost ? (\r\n          <button className='btn btn-danger res' onClick={() => reset()}>\r\n            Reset\r\n          </button>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {win ? (\r\n          <button className='btn btn-success win' onClick={() => reset()}>\r\n            Reset\r\n          </button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='selection container'>\r\n        <header>\r\n          <h1 className='text-center'>Minesweeper on React</h1>\r\n        </header>\r\n        <section>\r\n          <h3 className='text-center par'>Choose the difficulty</h3>\r\n          <div className='center'>\r\n            <select name='diff' id='diff' className='select' defaultValue={2}>\r\n              <option value={3}>Easy</option>\r\n              <option value={2}>Normal</option>\r\n              <option value={1}>Hard</option>\r\n              <option value={0}>You cant win</option>\r\n            </select>\r\n            <button\r\n              className='btn btn-primary '\r\n              onClick={() => {\r\n                let e = document.getElementById('diff');\r\n                setDiff(e.value);\r\n                setSelect(true);\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport Grid from './Grid';\r\nimport '../styles/layout.css';\r\n\r\nconst Layout = () => {\r\n  window.addEventListener('beforeinstallprompt', function (e) {\r\n    // log the platforms provided as options in an install prompt\r\n    console.log(e.platforms); // e.g., [\"web\", \"android\", \"windows\"]\r\n    e.userChoice.then(function (choiceResult) {\r\n      console.log(choiceResult.outcome); // either \"accepted\" or \"dismissed\"\r\n    }, handleError);\r\n  });\r\n  const handleError = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <div className='main'>\r\n      <Grid />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}